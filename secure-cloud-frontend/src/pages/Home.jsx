// Home.jsx
import React, { useState, useEffect } from "react";
import { useAuth } from "../contexts/AuthContext";
import api from "../services/api";
import { useNavigate } from "react-router-dom";
import Loader from "../components/Loader";
import { motion } from "framer-motion";
import bgImage from "../assets/bg.jpg";
import { FaEdit, FaSave, FaTimes, FaUserCircle } from "react-icons/fa";

const Home = () => {
Â  const { user, token, logout, setUser } = useAuth();
Â  const navigate = useNavigate();

Â  const [loading, setLoading] = useState(true);
Â  const [error, setError] = useState("");
Â  const [adminRequests, setAdminRequests] = useState([]);
Â  const [myRequests, setMyRequests] = useState([]);
Â  const [isEditing, setIsEditing] = useState(false);
Â  const [editName, setEditName] = useState("");
Â  const [selectedFile, setSelectedFile] = useState(null);
Â  const [updating, setUpdating] = useState(false);

Â  useEffect(() => {
Â  Â  if (!token) {
Â  Â  Â  navigate("/login");
Â  Â  Â  return;
Â  Â  }

Â  Â  const fetchData = async () => {
Â  Â  Â  try {
Â  Â  Â  Â  const { data: userData } = await api.get("/auth/me", {
Â  Â  Â  Â  Â  headers: { Authorization: `Bearer ${token}` },
Â  Â  Â  Â  });
Â  Â  Â  Â  setUser(userData.user);

Â  Â  Â  Â  if (["superAdmin", "orgAdmin", "deptAdmin"].includes(userData.user.role)) {
Â  Â  Â  Â  Â  const { data: adminReqData } = await api.get("/requests", {
Â  Â  Â  Â  Â  Â  headers: { Authorization: `Bearer ${token}` },
Â  Â  Â  Â  Â  });
Â  Â  Â  Â  Â  setAdminRequests(adminReqData.requests || []);
Â  Â  Â  Â  }

Â  Â  Â  Â  const { data: myReqData } = await api.get("/requests/my-requests", {
Â  Â  Â  Â  Â  headers: { Authorization: `Bearer ${token}` },
Â  Â  Â  Â  });
Â  Â  Â  Â  setMyRequests(myReqData.requests || []);
Â  Â  Â  } catch {
Â  Â  Â  Â  setError("Session expired. Please login again.");
Â  Â  Â  Â  logout();
Â  Â  Â  } finally {
Â  Â  Â  Â  setLoading(false);
Â  Â  Â  }
Â  Â  };

Â  Â  fetchData();
Â  }, [token, setUser, logout, navigate]);

Â  const respondToRequest = async (id, action) => {
Â  Â  try {
Â  Â  Â  const { data } = await api.post(
Â  Â  Â  Â  `/requests/${id}/action`,
Â  Â  Â  Â  { action },
Â  Â  Â  Â  { headers: { Authorization: `Bearer ${token}` } }
Â  Â  Â  );
Â  Â  Â  alert(data.message);
Â  Â  Â  setAdminRequests((prev) => prev.filter((r) => r._id !== id));
Â  Â  Â  setMyRequests((prev) => prev.filter((r) => r._id !== id));
Â  Â  Â  if (action === "approve" && data.user) setUser(data.user);
Â  Â  } catch (err) {
Â  Â  Â  alert(err?.response?.data?.message || "Failed to respond. Try again.");
Â  Â  }
Â  };

Â  const handleProfileUpdate = async (e) => {
Â  Â  e.preventDefault();
Â  Â  try {
Â  Â  Â  setUpdating(true);
Â  Â  Â  const formData = new FormData();
Â  Â  Â  if (editName) formData.append("name", editName);
Â  Â  Â  if (selectedFile) formData.append("avatar", selectedFile);

Â  Â  Â  const { data } = await api.put("/auth/update-profile", formData, {
Â  Â  Â  Â  headers: {
Â  Â  Â  Â  Â  Authorization: `Bearer ${token}`,
Â  Â  Â  Â  Â  "Content-Type": "multipart/form-data",
Â  Â  Â  Â  },
Â  Â  Â  });

Â  Â  Â  setUser(data.user);
Â  Â  Â  alert("Profile updated successfully!");
Â  Â  Â  setIsEditing(false);
Â  Â  Â  setEditName("");
Â  Â  Â  setSelectedFile(null);
Â  Â  } catch (err) {
Â  Â  Â  alert(err?.response?.data?.message || "Update failed. Try again.");
Â  Â  } finally {
Â  Â  Â  setUpdating(false);
Â  Â  }
Â  };

Â  if (loading) return <Loader />;

Â  if (error) {
Â  Â  return (
Â  Â  Â  <div className="min-h-screen flex flex-col items-center justify-center bg-slate-950 text-gray-200">
Â  Â  Â  Â  <p className="text-red-400 text-lg mb-4">{error}</p>
Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  onClick={() => window.location.reload()}
Â  Â  Â  Â  Â  className="bg-gradient-to-r from-teal-600 to-indigo-600 hover:from-teal-500 hover:to-indigo-500 text-white px-5 py-2 rounded-xl shadow-lg transition-all duration-300"
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Retry
Â  Â  Â  Â  </button>
Â  Â  Â  </div>
Â  Â  );
Â  }

Â  return (
Â  Â  <div
Â  Â  Â  className="min-h-screen flex flex-col justify-between bg-cover bg-center relative text-gray-100"
Â  Â  Â  style={{ backgroundImage: `url(${bgImage})` }}
Â  Â  >
Â  Â  Â  <div className="absolute inset-0 bg-gradient-to-br from-slate-950/90 via-slate-900/80 to-slate-950/90 backdrop-blur-sm" />

Â  Â  Â  <div className="relative z-10 flex-grow flex items-start justify-center pt-16 pb-10">
Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  initial={{ opacity: 0, y: 25 }}
Â  Â  Â  Â  Â  animate={{ opacity: 1, y: 0 }}
Â  Â  Â  Â  Â  transition={{ duration: 0.8 }}
Â  Â  Â  Â  Â  className="max-w-5xl w-full p-10 rounded-3xl bg-slate-900/75 border border-slate-700 backdrop-blur-xl shadow-2xl shadow-teal-500/10"
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  {/* Header */}
Â  Â  Â  Â  Â  <div className="flex justify-between items-center mb-8">
Â  Â  Â  Â  Â  Â  <h1 className="text-4xl font-extrabold bg-gradient-to-r from-teal-400 to-indigo-500 bg-clip-text text-transparent">
Â  Â  Â  Â  Â  Â  Â  Welcome, {user?.name ?? "User"} ðŸ‘‹
Â  Â  Â  Â  Â  Â  </h1>
Â  Â  Â  Â  Â  Â  <motion.button
Â  Â  Â  Â  Â  Â  Â  whileHover={{ scale: 1.05 }}
Â  Â  Â  Â  Â  Â  Â  whileTap={{ scale: 0.95 }}
Â  Â  Â  Â  Â  Â  Â  onClick={() => setIsEditing(!isEditing)}
Â  Â  Â  Â  Â  Â  Â  className="flex items-center gap-2 bg-gradient-to-r from-teal-600 to-indigo-600 hover:from-teal-500 hover:to-indigo-500 px-5 py-2 rounded-full text-white font-medium shadow-md transition-all duration-300"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  {isEditing ? (
Â  Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <FaTimes /> Cancel
Â  Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <FaEdit /> Edit Profile
Â  Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  </motion.button>
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* User Profile Card */}
Â  Â  Â  Â  Â  <motion.section
Â  Â  Â  Â  Â  Â  initial={{ opacity: 0, y: 15 }}
Â  Â  Â  Â  Â  Â  animate={{ opacity: 1, y: 0 }}
Â  Â  Â  Â  Â  Â  transition={{ duration: 0.5 }}
Â  Â  Â  Â  Â  Â  className="mb-10 bg-slate-800/60 rounded-2xl border border-slate-700 p-6 shadow-lg shadow-teal-500/5"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <h2 className="text-xl font-semibold text-teal-400 mb-5">My Profile</h2>
Â  Â  Â  Â  Â  Â  <div className="flex flex-wrap items-center gap-6">
Â  Â  Â  Â  Â  Â  Â  {user?.avatar ? (
Â  Â  Â  Â  Â  Â  Â  Â  <img
Â  Â  Â  Â  Â  Â  Â  Â  Â  src={`${api.defaults.baseURL.replace(/\/api$/, "")}${user.avatar}`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  alt="Avatar"
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="w-24 h-24 rounded-full object-cover border-2 border-teal-500 shadow-lg"
Â  Â  Â  Â  Â  Â  Â  Â  Â  onError={(e) =>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  (e.target.src =
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  "https://cdn-icons-png.flaticon.com/512/847/847969.png")
Â  Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  Â  <FaUserCircle className="text-8xl text-gray-500" />
Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  Â  <div className="space-y-1 text-gray-200">
Â  Â  Â  Â  Â  Â  Â  Â  <p><strong>Name:</strong> {user?.name}</p>
Â  Â  Â  Â  Â  Â  Â  Â  <p><strong>Email:</strong> {user?.email}</p>
Â  Â  Â  Â  Â  Â  Â  Â  <p><strong>Role:</strong> {user?.role}</p>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  {user?.orgHierarchy?.length > 0 && (
Â  Â  Â  Â  Â  Â  Â  <div className="mt-4 flex flex-wrap items-center gap-2">
Â  Â  Â  Â  Â  Â  Â  Â  <strong className="text-teal-400">Organization:</strong>
Â  Â  Â  Â  Â  Â  Â  Â  {user.orgHierarchy.map((o, i) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <span
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={o._id || i}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="px-3 py-1 bg-slate-900/70 border border-slate-700 rounded-lg text-sm text-gray-100 shadow-inner hover:bg-teal-700/20 transition-all"
Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {o.name}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </motion.section>

Â  Â  Â  Â  Â  {/* Edit Profile Section */}
Â  Â  Â  Â  Â  {isEditing && (
Â  Â  Â  Â  Â  Â  <motion.form
Â  Â  Â  Â  Â  Â  Â  initial={{ opacity: 0, y: 15 }}
Â  Â  Â  Â  Â  Â  Â  animate={{ opacity: 1, y: 0 }}
Â  Â  Â  Â  Â  Â  Â  transition={{ duration: 0.5 }}
Â  Â  Â  Â  Â  Â  Â  onSubmit={handleProfileUpdate}
Â  Â  Â  Â  Â  Â  Â  className="mb-10 bg-slate-800/70 p-6 rounded-2xl border border-slate-700 space-y-5 shadow-inner shadow-teal-500/10"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  <h2 className="text-lg font-semibold text-teal-300 flex items-center gap-2">
Â  Â  Â  Â  Â  Â  Â  Â  <FaEdit /> Edit Profile
Â  Â  Â  Â  Â  Â  Â  </h2>

Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  <label className="block text-gray-300 mb-1">Name</label>
Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={editName}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setEditName(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Enter new name"
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 bg-slate-900/70 border border-slate-600 rounded-md text-gray-100 focus:outline-none focus:ring-2 focus:ring-teal-500"
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  <label className="block text-gray-300 mb-1">Avatar</label>
Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  type="file"
Â  Â  Â  Â  Â  Â  Â  Â  Â  accept="image/*"
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setSelectedFile(e.target.files[0])}
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="w-full bg-slate-900/70 border border-slate-600 rounded-md p-2 text-gray-200 file:mr-3 file:py-1 file:px-3 file:rounded-md file:border-0 file:bg-teal-600 file:text-white hover:file:bg-teal-700 transition"
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  <motion.button
Â  Â  Â  Â  Â  Â  Â  Â  whileHover={{ scale: 1.03 }}
Â  Â  Â  Â  Â  Â  Â  Â  whileTap={{ scale: 0.97 }}
Â  Â  Â  Â  Â  Â  Â  Â  type="submit"
Â  Â  Â  Â  Â  Â  Â  Â  disabled={updating}
Â  Â  Â  Â  Â  Â  Â  Â  className="flex items-center justify-center gap-2 bg-gradient-to-r from-emerald-600 to-teal-600 hover:from-emerald-500 hover:to-teal-500 px-5 py-2 rounded-lg text-white font-medium shadow-md transition-all duration-300"
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  {updating ? "Updating..." : (<><FaSave /> Save Changes</>)}
Â  Â  Â  Â  Â  Â  Â  </motion.button>
Â  Â  Â  Â  Â  Â  </motion.form>
Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  {/* Requests Sections */}
Â  Â  Â  Â  Â  {["superAdmin", "orgAdmin", "deptAdmin"].includes(user?.role) &&
Â  Â  Â  Â  Â  Â  adminRequests.length > 0 && (
Â  Â  Â  Â  Â  Â  Â  <RequestSection
Â  Â  Â  Â  Â  Â  Â  Â  title="Pending Admin Requests"
Â  Â  Â  Â  Â  Â  Â  Â  color="indigo"
Â  Â  Â  Â  Â  Â  Â  Â  requests={adminRequests}
Â  Â  Â  Â  Â  Â  Â  Â  respondToRequest={respondToRequest}
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  {myRequests.length > 0 && (
Â  Â  Â  Â  Â  Â  <RequestSection
Â  Â  Â  Â  Â  Â  Â  title="My Pending Requests"
Â  Â  Â  Â  Â  Â  Â  color="teal"
Â  Â  Â  Â  Â  Â  Â  requests={myRequests}
Â  Â  Â  Â  Â  Â  Â  respondToRequest={respondToRequest}
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  </motion.div>
Â  Â  Â  </div>
Â  Â  </div>
Â  );
};

// Reusable Request Section
const RequestSection = ({ title, color, requests, respondToRequest }) => {
Â  const accent = color === "indigo" ? "indigo-400" : "teal-400";
Â  return (
Â  Â  <motion.section
Â  Â  Â  initial={{ opacity: 0, y: 15 }}
Â  Â  Â  animate={{ opacity: 1, y: 0 }}
Â  Â  Â  transition={{ duration: 0.6 }}
Â  Â  Â  className="mb-10"
Â  Â  >
Â  Â  Â  <h2
Â  Â  Â  Â  className={`text-xl font-semibold text-${accent} mb-5 border-b border-slate-700 pb-2`}
Â  Â  Â  >
Â  Â  Â  Â  {title}
Â  Â  Â  </h2>
Â  Â  Â  <div className="space-y-4">
Â  Â  Â  Â  {requests.map((r) => (
Â  Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  Â  key={r._id}
Â  Â  Â  Â  Â  Â  whileHover={{ scale: 1.02 }}
Â  Â  Â  Â  Â  Â  className="p-4 bg-slate-800/60 border border-slate-700 rounded-2xl shadow-md flex justify-between items-center hover:shadow-teal-500/20 transition-all duration-300"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <div className="text-gray-200">
Â  Â  Â  Â  Â  Â  Â  <p>
Â  Â  Â  Â  Â  Â  Â  Â  <strong>{r.sender?.name || "Someone"}</strong> sent you a{" "}
Â  Â  Â  Â  Â  Â  Â  Â  <span className="capitalize text-teal-300">{r.type}</span> request for{" "}
Â  Â  Â  Â  Â  Â  Â  Â  <strong className="text-teal-300">
Â  Â  Â  Â  Â  Â  Â  Â  Â  {r.orgId?.name || r.departmentId?.name || "Organization"}
Â  Â  Â  Â  Â  Â  Â  Â  </strong>
Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  Â  {r.message && (
Â  Â  Â  Â  Â  Â  Â  Â  <p className="italic text-sm text-gray-400 mt-1">{r.message}</p>
Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <div className="space-x-3">
Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => respondToRequest(r._id, "approve")}
Â  Â  Â  Â  Â  Â  Â  Â  className="bg-emerald-600 hover:bg-emerald-700 text-white px-4 py-1.5 rounded-lg shadow-md transition-all"
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Accept
Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => respondToRequest(r._id, "reject")}
Â  Â  Â  Â  Â  Â  Â  Â  className="bg-rose-600 hover:bg-rose-700 text-white px-4 py-1.5 rounded-lg shadow-md transition-all"
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Reject
Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  </motion.div>
Â  Â  Â  Â  ))}
Â  Â  Â  </div>
Â  Â  </motion.section>
Â  );
};

export default Home;
